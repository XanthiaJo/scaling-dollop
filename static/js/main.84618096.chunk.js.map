{"version":3,"sources":["../../config/index.js","webpack:///../src/index.js?a178","../../src/hood.js","App.js","serviceWorker.js","index.js"],"names":["name","version","design","code","department","type","difficulty","tags","optionGroups","fit","measurements","dependencies","inject","hide","parts","options","bnd","mm","min","max","fnd","neck","curve","pct","Pattern","freesewing","Design","config","plugins","prototype","draftHood","part","shorthand","Point","Path","points","paths","sa","Snippet","snippets","complete","paperless","macro","frontTop","frontNeck","head","shoulder","backNeck","backMid","frontTopCp","shift","frontNeckCp","shoulderCpLeft","shoulderCpRight","backNeckCp","backMidCpUp","backMidCpDown","front","move","line","back","_curve","backTop","from","bottomLeft","to","bottomRight","y","topRight","x","App","props","recreate","window","location","pathname","substr","split","length","id","userLanguage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84618096.chunk.js","sourcesContent":["import { version } from '../package.json'\n\n// ?? ðŸ¤” ?? --> https://en.freesewing.dev/packages/core/config\n\nexport default {\n\tname: 'hood',\n\tversion,\n\tdesign: 'XanthiaJo',\n\tcode: 'XanthiaJo',\n\tdepartment: 'accessories',\n\ttype: 'pattern',\n\tdifficulty: 3,\n\ttags: [\n\t\t'freesewing',\n\t\t'design',\n\t\t'diy',\n\t\t'fashion',\n\t\t'made to measure',\n\t\t'parametric design',\n\t\t'pattern',\n\t\t'sewing',\n\t\t'sewing pattern',\n\t],\n\toptionGroups: {\n\t\tfit: ['bnd', 'fnd', 'neck', 'curve'],\n\t},\n\tmeasurements: ['head'],\n\tdependencies: {},\n\tinject: {},\n\thide: [],\n\tparts: ['hood'],\n\toptions: {\n\n\t\tbnd: {mm: 20, min: 0, max: 100},\n\t\tfnd: {mm: 80, min: 0, max: 500},\n\t\tneck: {mm: 250, min: 100, max: 500},\n\t\tcurve: {pct: 75, min: 25, max: 100},\n\t},\n}\n","import freesewing from '@freesewing/core'\nimport plugins from '@freesewing/plugin-bundle'\nimport config from '../config'\nimport draftHood from './hood'\n\n// Create new design\nconst Pattern = new freesewing.Design(config, plugins)\n\n// Attach the draft methods to the prototype\nPattern.prototype.draftHood = draftHood\n\nexport default Pattern\n","export default function (part) {\n\tconst { options, \n\t\tPoint, \n\t\tPath, \n\t\tpoints, \n\t\tpaths, \n\t\tSnippet, \n\t\tsnippets, \n\t\tcomplete, \n\t\tsa, \n\t\tpaperless, \n\t\tmacro,\n\t\tmeasurements,\n\t} =\n    part.shorthand()\n\t\n\t// Pattern here\t\n\t\n\t// Points\t\n\tpoints.frontTop = new Point(0, 0)\n\t\n\tpoints.frontNeck = new Point(0, (measurements.head / 2) + options.fnd)\n\t\n\tpoints.shoulder = new Point(options.neck / 2, measurements.head / 2)\t\n\t\n\tpoints.backNeck = new Point(options.neck, (measurements.head / 2) + options.bnd)\t\n\t\n\tpoints.backMid = new Point(measurements.head / 2, measurements.head / 4)\n\t\n\t// Control points\t\t\t\n\t\n\tpoints.frontTopCp = points.frontTop\n\t.shift(0, (measurements.head / 2) * options.curve)\n\t\n\tpoints.frontNeckCp = points.frontNeck\n\t.shift(0, measurements.head / 16)\t\n\t\n\tpoints.shoulderCpLeft = points.shoulder\n\t.shift(180, measurements.head / 16)\t\n\t\n\tpoints.shoulderCpRight = points.shoulder\n\t.shift(0, measurements.head / 16)\t\n\t\n\tpoints.backNeckCp = points.backNeck\n\t.shift(180, measurements.head / 16)\t\n\t\n\tpoints.backMidCpUp = points.backMid\n\t.shift(90, (measurements.head / 4) * options.curve)\t\n\t\n\tpoints.backMidCpDown = points.backMid\n\t.shift(270, (measurements.head / 4) * options.curve)\t\n\t\n\t// Paths\n\tpaths.front = new Path()\n\t.move(points.frontTop)\n\t.line(points.frontNeck)\n\t\n\tpaths.frontNeck = new Path()\n\t.move(points.frontNeck)\n\t.curve(points.frontNeckCp, points.shoulderCpLeft, points.shoulder)\n\t\n\tpaths.backNeck = new Path()\n\t.move(points.shoulder)\n\t.curve(points.shoulderCpRight, points.backNeckCp, points.backNeck)\n\t\n\tpaths.back = new Path()\n\t.move(points.backNeck)\n\t._curve(points.backMidCpDown, points.backMid)\n\t\n\tpaths.backTop = new Path()\n\t.move(points.backMid)\n\t.curve(points.backMidCpUp, points.frontTopCp, points.frontTop)\n\t\n\t\n\t// Complete?\n\tif (complete) {\n\t\tif (sa) {\n\t\t}\n\t\t// Paperless?\n\t\tif (paperless) {\n\t\t}\n\t}\n\t\n\t// Paperless?\n\tif (paperless) {\n\t\tmacro('hd', {\n\t\t\tfrom: points.bottomLeft,\n\t\t\tto: points.bottomRight,\n\t\t\ty: points.bottomLeft.y + sa + 15,\n\t\t})\n\t\tmacro('vd', {\n\t\t\tfrom: points.bottomRight,\n\t\t\tto: points.topRight,\n\t\t\tx: points.topRight.x + sa + 15,\n\t\t})\n\t}\n\t\n\treturn part\n}\n","import React from 'react'\nimport freesewing from '@freesewing/core'\nimport Workbench from '@freesewing/components/Workbench'\nimport '@freesewing/css-theme'\nimport Pattern from './pattern/src/index.js'\n/*\n * The following symlink is required to make this import work:\n * `root_folder/example/src/pattern => `../../`\n *\n * Without it, we can't import the pattern as a local file\n * since create-react-app does not allow imports outside ./src\n * If it's imported as a dependency, webpack will cache the\n * build and there will be no hot-reloading of changes\n */\n\nconst App = (props) => {\n  // You can use this to add translations\n  /*\n  let translations = {\n    JSON: 'JSON',\n    someOtherString: 'Some other string that needs translation'\n  }\n  */\n\n  // Adds support for loading an external pattern configuration\n  let recreate = false\n  if (window) recreate = window.location.pathname.substr(1).split('/')\n  if (recreate.length === 3 && recreate[0] === 'recreate') {\n    recreate = { from: recreate[1], id: recreate[2] }\n  } else {\n    recreate = false\n  }\n\n  return (\n    <Workbench\n      freesewing={freesewing}\n      Pattern={Pattern}\n      userLanguage=\"en\"\n      recreate={recreate}\n      // translations={translations}\n    />\n  )\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './layout.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}